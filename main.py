from fastapi import FastAPI, Form, Request
from fastapi.responses import HTMLResponse
import joblib
import numpy as np

app = FastAPI()

# –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ –∏ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤—â–∏–∫–∞
model = joblib.load("model.pkl")
scaler = joblib.load("scaler.pkl")

# üßæ HTML-–≥–ª–∞–≤–Ω–∞—è —Å —Ñ–æ—Ä–º–æ–π
@app.get("/", response_class=HTMLResponse)
def form_page():
    html_content = """
    <html>
        <head>
            <title>–ü—Ä–æ–≤–µ—Ä–∫–∞ —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–≥–æ —Ä–∏—Å–∫–∞</title>
            <style>
                body { font-family: Arial; padding: 40px; background: #f4f4f4; }
                .box { background: white; padding: 20px; border-radius: 10px; width: 400px; margin: auto; box-shadow: 0 0 10px rgba(0,0,0,0.1); }
                input, button { width: 100%; padding: 10px; margin-top: 10px; }
                h2 { color: #2c3e50; }
            </style>
        </head>
        <body>
            <div class="box">
                <h2>üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∏—Å–∫–∞</h2>
                <form action="/predict_form" method="post">
                    <input name="profit_margin" placeholder="–†–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–æ–¥–∞–∂" required />
                    <input name="debt_ratio" placeholder="–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –∑–∞–¥–æ–ª–∂–µ–Ω–Ω–æ—Å—Ç–∏" required />
                    <input name="liquidity_ratio" placeholder="–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –ª–∏–∫–≤–∏–¥–Ω–æ—Å—Ç–∏" required />
                    <input name="return_on_assets" placeholder="–†–µ–Ω—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—å –∞–∫—Ç–∏–≤–æ–≤" required />
                    <button type="submit">–ü—Ä–æ–≤–µ—Ä–∏—Ç—å</button>
                </form>
            </div>
        </body>
    </html>
    """
    return HTMLResponse(content=html_content)

# üéØ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã –∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
@app.post("/predict_form", response_class=HTMLResponse)
def predict_from_form(
    profit_margin: float = Form(...),
    debt_ratio: float = Form(...),
    liquidity_ratio: float = Form(...),
    return_on_assets: float = Form(...)
):
    X = np.array([[profit_margin, debt_ratio, liquidity_ratio, return_on_assets]])
    X_scaled = scaler.transform(X)
    prediction = model.predict(X_scaled)[0]
    result = "‚ö†Ô∏è –ï—Å—Ç—å —Ä–∏—Å–∫!" if prediction == 1 else "‚úÖ –†–∏—Å–∫–∞ –Ω–µ—Ç"

    html_result = f"""
    <html>
        <head>
            <title>–†–µ–∑—É–ª—å—Ç–∞—Ç</title>
            <style>
                body {{ font-family: Arial; padding: 40px; background: #f4f4f4; text-align: center; }}
                .result {{ background: white; padding: 30px; display: inline-block; border-radius: 10px; box-shadow: 0 0 10px rgba(0,0,0,0.1); }}
                h2 {{ color: {'red' if prediction == 1 else 'green'}; }}
            </style>
        </head>
        <body>
            <div class="result">
                <h2>{result}</h2>
                <a href="/">–ù–∞–∑–∞–¥</a>
            </div>
        </body>
    </html>
    """
    return HTMLResponse(content=html_result)